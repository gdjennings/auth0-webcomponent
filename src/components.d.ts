/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */

import '@stencil/core';

declare global {
  namespace JSX {
    interface Element {}
    export interface IntrinsicElements {}
  }
  namespace JSXElements {}

  interface HTMLElement {
    componentOnReady?: () => Promise<this | null>;
  }

  interface HTMLStencilElement extends HTMLElement {
    componentOnReady(): Promise<this>;

    forceUpdate(): void;
  }

  interface HTMLAttributes {}
}

import {
  Observable,
} from 'rxjs';

declare global {

  namespace StencilComponents {
    interface Auth0Authenticate {
      'clientId': string;
      'domain': string;
      'getApiAccessToken': (audience: string, scopes: string) => Promise<any>;
      'getUser': () => Promise<any>;
      'isAuthenticated': () => boolean;
      'login': (params: any) => Observable<any>;
      'logout': () => void;
      'popup': boolean;
      'redirectUri': string;
    }
  }

  interface HTMLAuth0AuthenticateElement extends StencilComponents.Auth0Authenticate, HTMLStencilElement {}

  var HTMLAuth0AuthenticateElement: {
    prototype: HTMLAuth0AuthenticateElement;
    new (): HTMLAuth0AuthenticateElement;
  };
  interface HTMLElementTagNameMap {
    'auth0-authenticate': HTMLAuth0AuthenticateElement;
  }
  interface ElementTagNameMap {
    'auth0-authenticate': HTMLAuth0AuthenticateElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'auth0-authenticate': JSXElements.Auth0AuthenticateAttributes;
    }
  }
  namespace JSXElements {
    export interface Auth0AuthenticateAttributes extends HTMLAttributes {
      'clientId'?: string;
      'domain'?: string;
      'onAuthenticated'?: (event: CustomEvent) => void;
      'onLoaded'?: (event: CustomEvent) => void;
      'popup'?: boolean;
      'redirectUri'?: string;
    }
  }
}

declare global { namespace JSX { interface StencilJSX {} } }

export declare function defineCustomElements(window: any): void;